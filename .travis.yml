language: java
dist: trusty
services:
- docker
branches:
  only:
  - 6.3.x
before_cache:
- rm -rf $HOME/.gradle/caches/6.*/
- rm -rf $HOME/.gradle/caches/5.*/
- rm -rf $HOME/.gradle/caches/4.*/
- rm -fr $HOME/.gradle/caches/*/plugin-resolution/
- find ~/.gradle/caches/ -name "*.lock" -type f -delete
cache:
  bundler: false
  cargo: false
  directories:
  - "$HOME/.m2"
  - "$HOME/.npm/"
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
git:
  depth: 1
notifications:
  slack:
    secure: gNFUOGd0isowSwPfQ9VqGQWhWRDAjzX9tfH0xGe2gyg1kiOhq3Odb8fdcUg9f3DhAbiMxGDu08IgmDbeEyncB42Zdqk/DFvD3F958WaVy0O9TF2iAzO+ftBG0+slFHPDZ8qAy97+mV/be7KBkLYP+BydYTVfO84NvpLNiylmOVU=
env:
  global:
  - JAVA_OPTS="-Xms512m -Xmx4048m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC
    -Xverify:none -server"
  - GRADLE_OPTS="-Xms512m -Xmx1024m -Xss128m -XX:ReservedCodeCacheSize=512m -XX:+UseG1GC
    -Xverify:none -server"
  - SPRING_MAIN_BANNER-MODE="off"
  - secure: BsQhyhcR/2VirKw4yDULt+pOKZJqDGVDq8tIj9AJBDM9kp6tTF8hgKcYnrwfK77d5AFkNYl9EWBWHJGn7vOOx2El1aLsl37ZQQfp1gplLtCE3TcyUCMuxT3zLKOPCOTzNykk8BnQceKz/3DvoGngeqWQ4Ll//WL509Z8Qi+31T4KjDvzjROwHdvTVlaA92D/Bvqmg/WfX8jEJpYUKeMhcxHke2io5sb6DpAVjMlf6QUrCYdvzr638KqeeOTbifdaqOTZYCP+/A08YjxhrCGdjOa1oEnBLBS9kulCEKcnReKNuFgbvAP0yKpskiSHyRAST6oUXs/OiBaOTZIm+E9shRa88wZI34FGJwfAz/Dkx4b0qp4t+xordI7VILn3h4QeHFt8MsESQ69jN8bUzs73KpwaiVlMZvgOq3A3/BJGoMbDCSMQRUHIijs06Jp9AHSCt2oULm0ptmwxftmt1pAtRNQSmtwjQpYS8z8f1H6/ugaX1IlWKnBLIghpTM0yEY54LMXpkIRm6W/YCcvfjertpAIDXeGqMjbpW0shIzznq3kadMxsvHHLlBc69xFsqmjiqUyEjAYYUxnxbLR6ncmXjLoo3d8/YDnYe8EhD0yhGtpbAB+ZdBhnC17fzFWR4yh71GfTQ+n67wrI/uxgRs/Rx7dBP4SWCGdEuwH5a8VGhjE=
  - secure: btUfH8S7wqm80tk0+6BDpqj8KaJM3ncPRJW13HC2PTzk2Jm+s5kwzD/daTU8nkOluTlYt5EODwAszH+jS+QxFH7W/i6AfGV5ivTZwSKSTww5YSCxTOkWHzKFhc/kXhNGjywQv6Ejt0JmnvBrNjkk+N5RXyj0iQRejlN+RBMj+Txi7ZbXlxD1kTSi06bWhIT5fGeAOw+Y88O71SYKhSq0JGtva7mOFm1wUf9Iy5GfnHWXxxRiGMElwVlbelBRgNbQvrEELV3bySazbCkNHyzKSnIcW1DQZ4v/+JanVMVoUe4W3ONP30P6z9XGjxWL050fj4dcerpkvCK+76E/dsOKGMwVvZdx3c6uxKA1AAu37Q9upyatQRjo4BwzxFKgwDmRz0BCHkMmxusPNfkaEvcIC8rfyKSOF3CaaPUHoXJCv7/+9E892YUSrdCiKScFMF/xtKZ7kQPsapiIZLGc5XUvrhDdfozbipGABdVaYwO2dIZxCCCdCS0CMjDxgkG3PlAWZY0oWAlD9+EtLTq+Crwm56bG3Vf5TjQg/orAbU0oSDco2i9g4dh/a4v979lmw6mkRxvs619yMEHFIX5iK/yHmRPB0OvT7hgtYTD/9U+IJUMhcC5uOExJAAtbUvVY1iA9D1FRJ9YRdRpl9igIHcCVH6DE1ZnWI8veF6ruMP/coUk=
  - secure: paRb7a8mAADpMlFmA+jv/sQEJ0+dntcr/9DVDHxTGfxCxbrjfqn8XZAal/fNhVrAtQED27u7AacIk8tjrH0XqCoWEGNALpYyzjdwDMyCcEYtxLa4XBL8tLkJzjnqYmYfahyKCqUSBCTfo5DqlndckNJxaYD219P+AobAPsba9F62L7kkxMDqsXSdlH1HoUKwkV8mSvRX9C2dgXcknLuuLnRshK7HWt4/wNEhdv+Ruz4a0Ctuxkygx0ZeNGycp7JES2c9Ld014J6j0qLLVOnVjNEaHwzeNzqItbUeCjDAObJa9Df2dXrcD6QhUNmJEQuJ4NGJANEL98yQGl+F6cJ1YSGi2iYrqnriTdAd7Nk2c4LjyEAq+lBJOfO/Xgodm1JxSQ7RDGpucFxBDadM5GcngAjHXECysjlCMlJMi8TS5kI10fvJhFSzFVeneJa2vi5UiGSrbcHUKPvuQcPCmZ9ORBhQHIECuB8Xy59QvNlQtnJxUds+5RsskjGJBBm2FX8GpMtAycu+xu+JT/O5MMF3Ae/2XPGORPiySGw2dB9FdjtsOXdn61HMX2RwStuYes0oU04MDU7y8zF7cw/5/k+AjIWExETo6aNzhNwu88JeCh/uzLjlkhhcAHjWfFUDSqDzp+av+IQ48G6R48WPnGmBcyZjaFcii6htsXJu8C+NrQk=
jdk:
- openjdk11
before_install:
- unset _JAVA_OPTIONS
- "./ci/init-travis-build.sh"
install: true
script:
- "./ci/script.sh"
after_script:
- "./ci/stop.sh"
stages:
- initialize
- publish
- build
- postbuild
- test
- dependencies
jobs:
  include:
  - stage: initialize
    script: "./ci/download-dependencies.sh"
    name: Initialize Build System
  - stage: publish
    if: NOT commit_message =~ ^\[skip\s+snapshots\] and type != "pull_request" and
      (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: "./ci/publish-snapshots-release.sh"
    name: Publish SNAPSHOT Artifacts
  - stage: build
    script: "./ci/build.sh"
    name: Build CAS Management
  - stage: postbuild
    script: "./ci/analyze-sonarqube.sh"
    if: type != pull_request
    name: SonarCloud Analysis
  - stage: postbuild
    script: "./ci/analyze-style.sh"
    name: Checkstyle Analysis
  - stage: postbuild
    script: "./ci/push-docs-ghpages.sh"
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    name: Publish Documentation
  - stage: postbuild
    script: "./ci/build-javadocs.sh"
    name: Build Javadocs
  - stage: postbuild
    script: "./ci/check-config-factories.sh"
    name: Configuration Factory Analysis
  - stage: dependencies
    script: "./ci/analyze-dependencies.sh"
    name: Dependency Security Analysis
  - stage: dependencies
    if: type != pull_request and (branch =~ /^\d+\.\d+\.x$/ or branch = master)
    script: "./ci/report-dependency-updates.sh"
    name: Dependency Update Report
  - stage: test
    script: "./ci/tests/run-tests-simple.sh"
    name: Simple Unit Tests
